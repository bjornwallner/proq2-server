.\" Automatically generated by Pod::Man version 1.02
.\" Wed Jun 27 13:30:17 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` `
.    ds C' '
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
.    .
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "Bio::Tools::WWW 3"
.TH Bio::Tools::WWW 3 "perl v5.6.0" "2001-05-16" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Bio::Tools::WWW.pm \- Bioperl manager for web resources related to biology.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Sh "Object Creation"
.IX Subsection "Object Creation"
.Vb 1
\&    use Bio::Tools qw(:obj);
.Ve
.Vb 1
\&    $pdb = $BioWWW->home_url('pdb');
.Ve
There is no need to create a new Bio::Tools::WWW.pm object when the
\&\f(CW\*(C`:obj\*(C'\fR tag is used. This tag will import the static \f(CW$BioWWW\fR object
created by Bio::Tools::WWW.pm into your name space. This saves you
from having to call \f(CW\*(C`new Bio::Tools::WWW\*(C'\fR.
.PP
You are free to not use the :obj tag and create the object as you
like, but a Bio::Tools::WWW object is not configurable; any given
script only needs a single copy.
.SH "INSTALLATION"
.IX Header "INSTALLATION"
This module is included with the central Bioperl distribution:
.PP
.Vb 2
\&   http://bio.perl.org/Core/Latest
\&   ftp://bio.perl.org/pub/DIST
.Ve
You also need to define URLs for the following variables in this package:
.PP
.Vb 6
\&  $Not_found_url : Generic page to show in place of a 404 error.
\&  $Tmp_url       : Web-accessible site that is Used for scripts that 
\&                   need to generate temporary, web-accessible files.
\&                   The files need not necessarily be HTML files, but 
\&                   being on the same disk as the server will permit 
\&                   faster IO from server scripts.
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Bio::Tools::WWW is primarily a \s-1URL\s0 broker for a select set 
of sites related to bioinformatics/genome analysis. It 
definitely represents a biased, unexhaustive set.
It might be more accurate to call this module 
\&\*(L"Bio::Tools::URL.pm\*(R". But this module does handle some non-URL
things and it may do more of this in the future. Having one
module to cover all biologically relevant web utilities
makes it more convenient, especially at this early stage
of development. 
.PP
Maintaining accurate URLs over time can be challenging as 
new web sites spring up and old sites are re-organized. Because
of this fact, the URLs in this module are not guaranteed to be
correct or exhaustive and will require periodic updating.
.Sh "\s-1URL\s0 Management"
.IX Subsection "URL Management"
By keeping \s-1URL\s0 management within Bio::Tools::WWW.pm, other generic 
modules can easily access a variety of different web sites without 
having to know about a potential multitude of specific modules 
specialized for one database or another. A specific example
of this is in \fBBio::Tools::Blast.pm\fR where the function \fIblast_to_html()\fR
needs access to different URLs in order to add database links
to the Blast report. An alternative approach would be to have
multiple \fIblast_to_html()\fR functions defined within modules
specialized for Blast analyses of different datasets. This, however,
may create maintenance headaches when updating the different
versions of the function. 
.Sh "Complex Websites"
.IX Subsection "Complex Websites"
Websites with complex datasets may require special treatment
within this module. As an example,
URLs for the Saccharomyces Genome Database are clustered
separately in this module, due to (1) the different ways to
access information at this database and (2) the familiarity 
of the developer with this database. The Bio::SGD::WWW.pm inherits from
Bio::Tools::WWW.pm to permit access to the URLs provided by Bio::Tools::WWW.pm
and to SGD-specific \s-1HTML\s0 and images. 
.PP
The organization of Bio::Tools::WWW.pm is expected to evolve as 
websites get born, die, and mutate their APIs.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 2
\& http://bio.perl.org/Projects/modules.html  - Online module documentation
\& http://bio.perl.org/                       - Bioperl Project Homepage
.Ve
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.Sh "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other Bioperl modules.
Send your comments and suggestions preferably to one of the Bioperl mailing lists.
Your participation is much appreciated.
.PP
.Vb 2
\&  bioperl-l@bioperl.org                  - General discussion
\&  http://www.bioperl.org/MailList.shtml  - About the mailing lists
.Ve
.Sh "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track the bugs and 
their resolution. Bug reports can be submitted via email or the web:
.PP
.Vb 2
\&    bioperl-bugs@bio.perl.org                   
\&    http://bio.perl.org/bioperl-bugs/
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Steve A. Chervitz, sac@genome.stanford.edu
.SH "VERSION"
.IX Header "VERSION"
Bio::Tools::WWW.pm, 0.014
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 1996\-98 Steve A. Chervitz. All Rights Reserved.
This module is free software; you can redistribute it and/or 
modify it under the same terms as Perl itself.
.SH "APPENDIX"
.IX Header "APPENDIX"
Methods beginning with a leading underscore are considered private
and are intended for internal use by this module. They are
\&\fBnot\fR considered part of the public interface and are described here
for documentation purposes only.
.Sh "home_url"
.IX Subsection "home_url"
.Vb 11
\& Usage     : $BioWWW->home_url(<string>)
\& Purpose   : To obtain the homepage URL for a biological database or resource.
\& Returns   : String containing the URL (including "http://")
\& Argument  : String
\&           : Currently acceptable arguments are:
\&           :    bioperl  bioperl-schema  biomoo  bsm  ebi  emotif  entrez 
\&           :    expasy  mips  mmdb  ncbi  pir  pfam  pdb  geneQuiz  
\&           :    molMov  pubmed  sacch3d  sgd  scop  swissProt  webmol  ypd
\& Throws    : Warns if argument cannot be resolved to a URL.
\& Comments  : The URLs listed here do not represent a complete list.
\&           : Expect this to evolve and grow with time.
.Ve
See Also   : the search_url manpage()
.Sh "search_url"
.IX Subsection "search_url"
.Vb 25
\& Usage     : $BioWWW->search_url(<string>)
\& Purpose   : To provide a URL stem for a search engine at a biological database 
\&           : or resource.
\& Returns   : String containing the URL (including "http://")
\& Argument  : String
\&           : Currently acceptable arguments are:
\&           :   3db  embl  cath  ec1  ec2  ec3  emotif_id  entrez  gb1  gb2  
\&           :   gb3  gb4  gb5  pdb  medline  mmdb  pdb  pdb_coord  pfam  pir_acc  
\&           :   pdbSum  molMov  swpr  swModel  swprSearch  scop  scop_pdb  scop_data 
\&           :   ypd
\& Throws    : Warns if argument cannot be resolved to a URL.
\& Comments  : Unlike the homepage URLs, this method does not return a complete
\&           : URL but a stem which must be further modified, typically by
\&           : appending data to it, before it can be used. The data appended
\&           : depends on the specific URL; typically, it is a database ID or
\&           : other unique identifier.
\&           : The requirements for each URL will be described here eventually.
\&           : 
\&           : The URLs listed here do not represent a complete list.
\&           : Expect this to evolve and grow with time.
\&           :
\&           : Given this complexity, it may be useful to provide special methods
\&           : for these different URLs. This would however result in an 
\&           : explosion of methods that might make this module less 
\&           : maintainable and harder to use.
.Ve
See Also   : the home_url manpage()
.Sh "stem_url"
.IX Subsection "stem_url"
.Vb 10
\& Usage     : $BioWWW->stem_url(<string>)
\& Purpose   : To obtain the minimal stem URL for searching a biological database or resource.
\& Returns   : String containing the URL (including "http://")
\& Argument  : String
\&           : Currently acceptable arguments are:
\&           :    emotif  entrez  pdb
\& Throws    : Warns if argument cannot be resolved to a URL.
\& Comments  : The URLs stems returned by this method are much more minimal than
\&           : this provided by search_url(). Use of these stems requires knowledge
\&           : of the CGI scripts which they invoke.
.Ve
See Also   : the search_url manpage()
.Sh "viewer_url"
.IX Subsection "viewer_url"
.Vb 11
\& Usage     : $BioWWW->viewer_url(<string>)
\& Purpose   : To obtain the stem URL for a 3D viewer (RasMol, WebMol, Cn3D)
\& Returns   : String containing the URL (including "http://")
\& Argument  : String
\&           : Currently acceptable arguments are:
\&           :    rasmol webmol cn3d java  (java is an alias for webmol)
\& Throws    : Warns if argument cannot be resolved to a URL.
\& Comments  : The 4-letter Brookhaven PDB identifier must be appended to the
\&           : URL provided by this method.
\&           : The URLs listed here do not represent a complete list.
\&           : Expect this to evolve and grow with time.
.Ve
.Sh "not_found_url"
.IX Subsection "not_found_url"
.Vb 6
\& Usage     : $BioWWW->not_found_url()
\& Purpose   : To obtain the URL for a web page to be shown in place of a 404 error.
\& Returns   : String containing the URL (including "http://")
\& Argument  : n/a
\& Throws    : n/a
\& Comments  : This URL should be customized as desired.
.Ve
.Sh "tmp_url"
.IX Subsection "tmp_url"
.Vb 6
\& Usage     : $BioWWW->tmp_url()
\& Purpose   : To obtain the URL for a temporary, web-accessible directory.
\& Returns   : String containing the URL (including "http://")
\& Argument  : n/a
\& Throws    : n/a
\& Comments  : This URL should be customized  as desired.
.Ve
.Sh "search_link"
.IX Subsection "search_link"
.Vb 8
\& Usage     : $BioWWW->search_link(<site>, <value>, <text>)
\& Purpose   : Wrapper for search_url() that returns the URL within an HTML anchor.
\& Returns   : String containing the HTML anchor ( qq|<A HREF="http://..."</A>|)
\& Argument  : <site>  = string to be used as argument for search_url()
\&           : <value> = string to be appended to the search URL stem.
\&           : <text>  = string to be shown as the link text (default = <value>).
\& Throws    : n/a
\& Status    : Experimental
.Ve
See Also   : the search_url manpage()
.Sh "viewer_link"
.IX Subsection "viewer_link"
.Vb 8
\& Usage     : $BioWWW->viewer_link(<site>, <value>, <text>)
\& Purpose   : Wrapper for viewer_url() that returns the complete URL within an HTML anchor.
\& Returns   : String containing the HTML anchor ( qq|<A HREF="http://..."</A>|)
\& Argument  : <site>  = string to be used as argument for viewer_url()
\&           : <value> = string to be appended to the viewer URL stem.
\&           : <text>  = string to be shown as the link text (default = <value>).
\& Throws    : n/a
\& Status    : Experimental
.Ve
See Also   : the viewer_url manpage()
.Sh "html"
.IX Subsection "html"
.Vb 14
\& Usage     : $BioWWW->html(<string>)
\& Purpose   : To obtain HTML-formatted text for frequently needed web-page messages.
\& Returns   : String containing the HTML anchor ( qq|<A HREF="http://..."</A>|)
\& Argument  : String.
\&           : Currently acceptable arguments are:
\&           :   authority  (mailto: link for webmaster; shows e-mail address as link)
\&           :   notify     (wraps mailto:authority link with text for link "please notify us")
\&           :   ourFault   ("this problem is our fault. If it persists <notify-link>")
\&           :   trouble    (same as ourFault but doesn't blame us for the problem)
\&           :   techDiff   ("we are experiencing technical difficulties. Please stand by.")
\& Throws    : n/a
\& Comments  : The authority (webmaster) is imported from the Bio::Root::Global.pm
\&           : module. The value for $AUTHORITY should be set there, or
\&           : customize this module so that it doesn't use Bio::Root::Global.pm.
.Ve
.Sh "sgd_url"
.IX Subsection "sgd_url"
.Vb 8
\& Usage     : $BioWWW->sgd_url(<string>)
\& Purpose   : To obtain the webpage URL or search stem for SGD.
\& Returns   : String containing the URL (including "http://")
\& Argument  : String
\&           : Currently acceptable arguments (TODO).
\& Throws    : Warns if argument cannot be resolved to a URL.
\& Comments  : This accessor is specialized for the Saccharomyces Genome Database.
\&           : It is possible that it will be moved to SGD::WWW.pm in the future.
.Ve
See Also   : the search_url manpage()
.Sh "s3d_url"
.IX Subsection "s3d_url"
.Vb 8
\& Usage     : $BioWWW->s3d_url(<string>)
\& Purpose   : To obtain the webpage URL or search stem for Sacch3D.
\& Returns   : String containing the URL (including "http://")
\& Argument  : String
\&           : Currently acceptable arguments (TODO).
\& Throws    : Warns if argument cannot be resolved to a URL.
\& Comments  : This accessor is specialized for the Saccharomyces Genome Database.
\&           : It is possible that it will be moved to SGD::WWW.pm in the future.
.Ve
See Also   : the search_url manpage()
.Sh "sgd_stem_url"
.IX Subsection "sgd_stem_url"
.Vb 8
\& Usage     : $BioWWW->sgd_stem_url(<string>)
\& Purpose   : To obtain the minimal stem URL for a SGD/Sacch3D CGI script.
\& Returns   : String containing the URL (including "http://")
\& Argument  : String
\&           : Currently acceptable arguments (TODO).
\& Throws    : Warns if argument cannot be resolved to a URL.
\& Comments  : This accessor is specialized for the Saccharomyces Genome Database.
\&           : It is possible that it will be moved to SGD::WWW.pm in the future.
.Ve
See Also   : the search_url manpage()
.Sh "s3d_link"
.IX Subsection "s3d_link"
.Vb 10
\& Usage     : $BioWWW->s3d_link(<site>, <value>, <text>)
\& Purpose   : Wrapper for s3d_url() that returns the complete URL within an HTML anchor.
\& Returns   : String containing the URL (including "http://")
\& Argument  : <site>  = string to be used as argument for s3d_url()
\&           : <value> = string to be appended to the s3d URL stem.
\&           : <text>  = string to be shown as the link text (default = <value>).
\& Throws    : n/a
\& Status    : Experimental
\& Comments  : This accessor is specialized for the Saccharomyces Genome Database.
\&           : It is possible that it will be moved to SGD::WWW.pm in the future.
.Ve
See Also   : the s3d_url manpage(), the sgd_link manpage()
.Sh "sgd_link"
.IX Subsection "sgd_link"
.Vb 10
\& Usage     : $BioWWW->sgd_link(<site>, <value>, <text>)
\& Purpose   : Wrapper for sgd_url() that returns the complete URL within an HTML anchor.
\& Returns   : String containing the URL (including "http://")
\& Argument  : <site>  = string to be used as argument for sgd_url()
\&           : <value> = string to be appended to the sgd URL stem.
\&           : <text>  = string to be shown as the link text (default = <value>).
\& Throws    : n/a
\& Status    : Experimental
\& Comments  : This accessor is specialized for the Saccharomyces Genome Database.
\&           : It is possible that it will be moved to SGD::WWW.pm in the future.
.Ve
See Also   : the sgd_url manpage(), the s3d_link manpage()
.Sh "start_html"
.IX Subsection "start_html"
.Vb 10
\& Usage     : $BioWWW->start_html()
\& Purpose   : Prints the "Content-type: text/html\en\en<HTML>\en" header.
\& Returns   : n/a; This method prints the Content-type string shown above.
\& Argument  : n/a
\& Throws    : n/a
\& Status    : Experimental
\& Comments  : This method prevents redundant invocations thus avoiding th
\&           : accidental printing of the "content-type..." on the page.
\&           : If using L. Stein's CGI.pm, this is similar to $query->header()
\&           : (Does CGI.pm prevent redundant invocation?)
.Ve
.Sh "redirect"
.IX Subsection "redirect"
.Vb 6
\& Usage     : $BioWWW->redirect(<string>)
\& Purpose   : Prints the header needed to redirect a web browser to a supplied URL. 
\& Returns   : n/a; Prints the redirection header.
\& Argument  : String containing the URL to be redirected to.
\& Throws    : n/a
\& Status    : Experimental
.Ve
.Sh "pre"
.IX Subsection "pre"
.Vb 6
\& Usage     : $BioWWW->pre("text to be pre-formatted");
\& Purpose   : To produce HTML for text that is not to be formated by the brower.
\& Returns   : String containing the "<pre>" formatted html.
\& Argument  : n/a
\& Throws    : n/a
\& Status    : Experimental
.Ve
.Sh "strip_html"
.IX Subsection "strip_html"
.Vb 26
\& Usage     : $boolean = &strip_html( string_ref, [fast] );
\& Purpose   : Removes HTML formatting from a supplied string.
\& Returns   : Boolean: true if string was stripped, false if not.
\& Argument  : string_ref = reference to a string containing the whole 
\&           :              web page to be stripped.
\&           : fast = a non-zero value. Optional. If set, a faster 
\&           :        but perhaps less thorough procedure is used for
\&           :        stripping. Default = not fast.
\& Throws    : Exception if the argument is not a scalar reference.
\& Comments  : Based on code originally written by Alex Dong Li
\&           : (ali@genet.sickkids.on.ca).
\&           : This is a more generic version of the function that appears 
\&           : in Bio::Tools::Blast::HTML.pm
\&           : This version does not perform any Blast-specific stripping.
\&           :
\&           : This employs a simple method for removing tags that
\&           : will fail under following conditions:
\&           :  1) if quoted > appears in a tag  (does this ever happen?)
\&           :  2) if a tag is split over multiple lines and this method is
\&           :     used to process one line at a time.
\&           :
\&           : Without fast mode, large HTML files can take exceedingly long times to
\&           : strip (e.g., 1Meg file with many tags can take 10 minutes versus 5 seconds
\&           : in fast mode. Try the swissprot yeast table). If you know the HTML to be
\&           : well-behaved (i.e., tags are not split across mutiple lines), use fast
\&           : mode for large, dense files.
.Ve
.SH "FOR DEVELOPERS ONLY"
.IX Header "FOR DEVELOPERS ONLY"
.Sh "Data Members"
.IX Subsection "Data Members"
An instance of Bio::Tools::WWW.pm is a blessed reference to a hash containing
all or some of the following fields:
.PP
.Vb 4
\& FIELD           VALUE
\& --------------------------------------------------------------
\& _started_html   Defined the on the initial invocation of start_html()
\&                 to avoid duplicate printing out the "Content-type..." header.
.Ve
