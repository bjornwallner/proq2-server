.\" Automatically generated by Pod::Man version 1.02
.\" Wed Jun 27 13:30:53 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` `
.    ds C' '
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
.    .
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "Bio::Tools::Blast::HTML 3"
.TH Bio::Tools::Blast::HTML 3 "perl v5.6.0" "2001-05-16" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Bio::Tools::Blast::HTML.pm \- Bioperl Utility module for \s-1HTML\s0
formatting Blast reports
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Sh "Adding HTML-formatting"
.IX Subsection "Adding HTML-formatting"
.Vb 1
\&    use Bio::Tools::Blast::HTML qw(&get_html_func);
.Ve
.Vb 1
\&    $func = &get_html_func();
.Ve
.Vb 1
\&    # Now as each line of the report is read, pass it to &$func($line).
.Ve
See the get_html_func manpage() for details.
Also see \fBBio::Tools::Blast::to_html\fR for an example of usage.
.Sh "Removing HTML-formatting"
.IX Subsection "Removing HTML-formatting"
.Vb 1
\&    use Bio::Tools::Blast::HTML qw(&strip_html);
.Ve
.Vb 1
\&    &strip_html(\e$blast_report_string)
.Ve
See the strip_html manpage() for details.
.SH "INSTALLATION"
.IX Header "INSTALLATION"
This module is included with the central Bioperl distribution:
.PP
.Vb 2
\&   http://bio.perl.org/Core/Latest
\&   ftp://bio.perl.org/pub/DIST
.Ve
Follow the installation instructions included in the \s-1README\s0 file.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
This module can be used to add \s-1HTML\s0 formatting to or remove \s-1HTML\s0
formatting from a raw Blast sequence analysis report. Hypertext links
to the appropriate database are added for each hit sequence (GenBank,
Swiss-Prot, \s-1PIR\s0, \s-1PDB\s0, \s-1SGD\s0).
.PP
This module is intended for use by Bio::Tools::Blast.pm and related modules, 
which provides a front-end to the methods in Bio::Tools::Blast::HTML.pm.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
Bio::Tools::Blast::HTML.pm does not inherit from any other class
besides Exporter.  It is used by \fBBio::Tools::Blast.pm\fR only.  This
class relies on \fBBio::Tools::WWW.pm\fR to provide key \s-1URLS\s0 for adding
links in the Blast report to specific databases.
.PP
The greatest dependency comes from the dynamic state of the web. URLs
are are likely to change in the future, so all links cannot be
guaranteed to work indefinitely.  Feel free to report broken or
incorrect database links (the FEEDBACK manpage). Thanks!
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 2
\& Bio::Tools::Blast.pm    - Blast object.
\& Bio::Tools::WWW.pm      - URL repository.
.Ve
.Vb 3
\& http://bio.perl.org/Projects/modules.html  - Online module documentation
\& http://bio.perl.org/Projects/Blast/        - Bioperl Blast Project     
\& http://bio.perl.org/                       - Bioperl Project Homepage
.Ve
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.Sh "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules.  Send your comments and suggestions preferably to one
of the Bioperl mailing lists.  Your participation is much appreciated.
.PP
.Vb 2
\&    bioperl-l@bioperl.org          - General discussion
\&    http://bio.perl.org/MailList.html             - About the mailing lists
.Ve
.Sh "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep 
track the bugs and  their resolution. Bug reports can be submitted 
via email or the web:
.PP
.Vb 2
\&    bioperl-bugs@bio.perl.org                   
\&    http://bio.perl.org/bioperl-bugs/
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Steve A. Chervitz, sac@genome.stanford.edu
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 1998\-2000 Steve A. Chervitz. All Rights Reserved.
This module is free software; you can redistribute it and/or 
modify it under the same terms as Perl itself.
.SH "APPENDIX"
.IX Header "APPENDIX"
Methods beginning with a leading underscore are considered private
and are intended for internal use by this module. They are
\&\fBnot\fR considered part of the public interface and are described here
for documentation purposes only.
.Sh "get_html_func"
.IX Subsection "get_html_func"
.Vb 23
\& Usage     : $func_ref = &get_html_func( [array_ref] );
\&           : This method is exported.
\& Purpose   : Provides a function that adds HTML formatting to a
\&           : raw Blast report line-by-line.
\&           : Utility method used by to_html() in Bio::Tools::Blast.pm.
\& Returns   : Reference to an anonymous function to be used while reading in  
\&           : the raw report. 
\&           : The function itself operates on the Blast report line-by-line
\&           : HTML-ifying it and printing it to STDOUT (or saving in the supplied
\&           : array ref) as it goes:
\&           :     foreach( @raw_report ) { &$func_ref($_); }
\& Argument  : array ref (optional) for storing the HTML-formatted report.
\&           : If no argument is supplied, HTML output is sent to STDOUT.
\& Throws    : Croaks if an argument is supplied and is not an array ref.
\&           : The anonymous function returned by this method croaks if 
\&           : the Blast output appears to be HTML-formatted already.
\& Comments  : Adapted from a script by Keith Robison  November 1993 
\&           : krobison@nucleus.harvard.edu; http://golgi.harvard.edu/gilbert.html
\&           : Modified extensively by Steve Chervitz and Mike Cherry.
\&           : Some modifications are customizations for BLAST reports served up
\&           : by the Saccharomyces Genome Database.
\&           : Feel free to modify or replace portions of this code as necessary
\&           : to accomodate new BLAST datasets or changes to the Blast format.
.Ve
See Also   : \fB\f(BIBio::Tools::Blast::to_html()\fB\fR
.Sh "_set_markup_data"
.IX Subsection "_set_markup_data"
.Vb 5
\& Usage     : n/a; utility method used by get_html_func()
\& Purpose   : Sets various hashes and regexps used for adding HTML
\&           : to raw Blast output.
\& Returns   : n/a
\& Comments  : These items need be set only once.
.Ve
See Also   : the get_html_func manpage()
.Sh "_markup_database"
.IX Subsection "_markup_database"
.Vb 6
\& Usage     : n/a; utility method used by get_html_func()
\& Purpose   : Converts a cryptic database ID into a readable name.
\& Returns   : n/a
\& Comments  : This is used for converting local database IDs into
\&           : understandable terms. At present, it only recognizes
\&           : databases used locally at SGD.
.Ve
See Also   : the get_html_func manpage()
.Sh "_markup_report"
.IX Subsection "_markup_report"
.Vb 52
\& Usage     : n/a; utility function used by get_html_func()
\& Purpose   : Adds HTML links to aid navigation of raw Blast output.
\& Returns   : n/a
\& Comments  : HTML-formatting is dependent on the Blast server that
\&           : provided the Blast report. Currently, this function can handle reports
\&           : produced by NCBI and SGD. Feel free to modify this function
\&           : to accomodate reports produced by other servers/sites.
\&           :
\&           : This function is simply a collection of substitution regexps 
\&           : that recognize and modify the relevant lines of the Blast report. 
\&           : All non-header lines of the report are passed through this function,
\&           : only the ones that match will get modified.
\&           :
\&           : The general scheme for adding links is as follows:
\&           : (Some of the SGD markups do not follow this scheme precisely
\&           :  but this is the general trend.)
\&           :
\&           : For description lines in the summary table at the top of report:
\&           :
\&           : DB:SEQUENCE_ID  DESCRIPTION   SIGNIF_VAL
\&           :        DB          = links to the indicated database (if not Gen/Embl/Ddbj).
\&           :        SEQUENCE_ID = links to GenBank entry for the sequence.
\&           :        SIGNIF_VAL  = internal link to relevant alignment section.
\&           :
\&           : For the alignment sections in the body of the report:
\&           :
\&           : DB:SEQUENCE_ID  (Back | Top) DESCRIPTION 
\&           :        DB          = links to the indicated database (if not Gen/Embl/Ddbj).
\&           :        SEQUENCE_ID = links to GenBank entry for the sequence.
\&           :        SIGNIF_VAL  = internal link to alignment section.
\&           :        Back        = internal link to description line in summary section.
\&           :        Top         = internal link to top of page.
\&           :
\&           : 'DB' links are created for PDB, PIR, and SwissProt sequences.
\&           :
\&           : RE_PARSING HTML-FOMRATTED REPORTS:
\&           : ----------------------------------
\&           : HTML-formatted reports generated by this module, as well as reports
\&           : obtained from the NCBI servers, should be parsable
\&           : by Bio::Tools::Blast.pm. Parsing HTML-formatted reports is
\&           : slow, however, since the HTML must be removed prior to parsing.
\&           : Parsing HTML-formatted reports is dependent on the specific structure
\&           : of the HTML and is generally not recommended.
\&           : 
\&           : Note that since URLs can change without notice, links will need updating.
\&           : The links are obtained from Bio::Tools::WWW.pm updating that module
\&           : will update this as well.
\&           :
\& Bugs      : Some links to external databases are incorrect
\&           : (in particular, for 'bbs' and 'prf' databases on NCBI Blast reports.
\&           : Some links may fail as a result of the dynamic nature of the web.
\&           : Hypertext links are not added to hits without database ids.
.Ve
See Also   : the get_html_func manpage(), \fBBio::Tools::WWW.pm\fR, the strip_html manpage()
.Sh "_prog_ref_html"
.IX Subsection "_prog_ref_html"
.Vb 3
\& Usage     : n/a; utility method used by get_html_func().
\& Purpose   : Get a special alert for BLAST reports against all of GenBank/EMBL.
\& Returns   : string with HTML
.Ve
See Also   : the get_html_func manpage()
.Sh "_genbank_alert"
.IX Subsection "_genbank_alert"
.Vb 3
\& Usage     : n/a; utility method used by get_html_func().
\& Purpose   : Get a special alert for BLAST reports against all of GenBank/EMBL.
\& Returns   : string with HTML
.Ve
See Also   : the get_html_func manpage()
.Sh "strip_html"
.IX Subsection "strip_html"
.Vb 30
\& Usage     : $boolean = &strip_html( string_ref );
\&           : This method is exported.
\& Purpose   : Removes HTML formatting from a supplied string.
\&           : Attempts to restore the Blast report to enable
\&           : parsing by Bio::Tools::Blast.pm.
\& Returns   : Boolean: true if string was stripped, false if not.
\& Argument  : string_ref = reference to a string containing the whole Blast
\&           :              report.
\& Throws    : Croaks if the argument is not a scalar reference.
\& Comments  : Based on code originally written by Alex Dong Li
\&           : (ali@genet.sickkids.on.ca).
\&           : This method does some Blast-specific stripping 
\&           : (adds back a '>' character in front of each HSP 
\&           : alignment listing).
\&           :   
\&           : THIS METHOD IS HIGHLY ERROR-PRONE!
\&           :
\&           : Removal of the HTML tags and accurate reconstitution of the
\&           : non-HTML-formatted report is highly dependent on structure of
\&           : the HTML-formatted version. For example, it assumes that first 
\&           : line of each alignment section (HSP listing) starts with a
\&           : <a name=..> anchor tag. This permits the reconstruction of the 
\&           : original report in which these lines begin with a ">".
\&           : This is required for parsing.
\&           :
\&           : If the structure of the Blast report itself is not intended to
\&           : be a standard, the structure of the HTML-formatted version
\&           : is even less so. Therefore, the use of this method to
\&           : reconstitute parsable Blast reports from HTML-format versions
\&           : should be considered a temorary solution.
.Ve
See Also   : \fB\f(BIBio::Tools::Blast::parse()\fB\fR
