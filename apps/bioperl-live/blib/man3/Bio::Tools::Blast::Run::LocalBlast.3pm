.\" Automatically generated by Pod::Man version 1.02
.\" Wed Jun 27 13:30:00 2001
.\"
.\" Standard preamble:
.\" ======================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Ip \" List item
.br
.ie \\n(.$>=3 .ne \\$3
.el .ne 3
.IP "\\$1" \\$2
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R

.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used
.\" to do unbreakable dashes and therefore won't be available.  \*(C` and
.\" \*(C' expand to `' in nroff, nothing in troff, for use with C<>
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` `
.    ds C' '
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr
.\" for titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and
.\" index entries marked with X<> in POD.  Of course, you'll have to process
.\" the output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
.    .
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it
.\" makes way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.bd B 3
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ======================================================================
.\"
.IX Title "Bio::Tools::Blast::Run::LocalBlast 3"
.TH Bio::Tools::Blast::Run::LocalBlast 3 "perl v5.6.0" "2001-05-16" "User Contributed Perl Documentation"
.UC
.SH "NAME"
Bio::Tools::Blast::Run::LocalBlast.pm \- Bioperl module for running
Blast analyses locally.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 1
\&    use Bio::Tools::Blast::Run::LocalBlast qw(&blast_local);
.Ve
.Vb 1
\&    &blast_local( %named_parameters);
.Ve
See the blast_local manpage() for a description of available parameters.
.SH "INSTALLATION"
.IX Header "INSTALLATION"
This module is included with the central Bioperl distribution:
.PP
.Vb 2
\&   http://bio.perl.org/Core/Latest
\&   ftp://bio.perl.org/pub/DIST
.Ve
Follow the installation instructions included in the \s-1README\s0 file.
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Bio::Tools::Blast::Run::LocalBlast.pm contains methods and data
necessary for running Blast sequence analyses on a local machine. This
module must be customized for a specific site.
.PP
The basic requirements are that it conform to this minimal \s-1API:\s0
.Ip "1 Export a method called the blast_local manpage()" 4
.IX Item "1 Export a method called the blast_local manpage()"
that accepts a Bio::Tools::Blast.pm object + named parameters as
specified by the blast_local manpage().
.Ip "2 The the blast_local manpage() method should return" 4
.IX Item "2 The the blast_local manpage() method should return"
a list of names of files containing the raw Blast reports.
.Ip "3 Exporting arrays containing a list of available databases" 4
.IX Item "3 Exporting arrays containing a list of available databases"
in the arrays \f(CW\*(C`@Blast_dbn_local\*(C'\fR and \f(CW\*(C`@Blast_dbp_local\*(C'\fR.
.PP
The generic version of this module provides some rudimentary logic,
but feel free to customize as necessary.
.Sh "Script Files"
.IX Subsection "Script Files"
Sometimes it is convenient to write an executable shell script for
running a set of Blasts on a local machine. This script can be saved
and re-executed as necessary or saved for documentation purposes. This
module could provide a convenient way to consolidate the logic
necessary for producing such script files or perhaps stubs of script
file that could be further modified for Blast-ing specific datasets.
.SH "DEPENDENCIES"
.IX Header "DEPENDENCIES"
Bio::Tools::Blast::Run::LocalBast.pm is used by \fBBio::Tools::Blast.pm\fR
The development of this is linked with the Blast.pm module and should
be updated along with that module.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
.Vb 5
\& Bio::Tools::Blast.pm                    - Blast object.
\& Bio::Tools::Blast::Run::postclient.pl   - Script for accessing remote server.
\& Bio::Tools::Blast::Run::Webblast.pm     - Utility module for running Blasts remotely.
\& Bio::Tools::Blast::HTML.pm              - Blast HTML-formating utility class.
\& Bio::Seq.pm                             - Biosequence object
.Ve
.Vb 3
\& http://bio.perl.org/Projects/modules.html  - Online module documentation
\& http://bio.perl.org/Projects/Blast/        - Bioperl Blast Project     
\& http://bio.perl.org/                       - Bioperl Project Homepage
.Ve
.SH "FEEDBACK"
.IX Header "FEEDBACK"
.Sh "Mailing Lists"
.IX Subsection "Mailing Lists"
User feedback is an integral part of the evolution of this and other
Bioperl modules.  Send your comments and suggestions preferably to one
of the Bioperl mailing lists.  Your participation is much appreciated.
.PP
.Vb 2
\&    bioperl-l@bioperl.org          - General discussion
\&    http://bio.perl.org/MailList.html             - About the mailing lists
.Ve
.Sh "Reporting Bugs"
.IX Subsection "Reporting Bugs"
Report bugs to the Bioperl bug tracking system to help us keep track
the bugs and their resolution. Bug reports can be submitted via email
or the web:
.PP
.Vb 2
\&    bioperl-bugs@bio.perl.org                   
\&    http://bio.perl.org/bioperl-bugs/
.Ve
.SH "AUTHOR"
.IX Header "AUTHOR"
Steve A. Chervitz, sac@genome.stanford.edu
.SH "VERSION"
.IX Header "VERSION"
Bio::Tools::Blast::Run::LocalBlast.pm, 0.01
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright (c) 1998 Steve A. Chervitz. All Rights Reserved.
This module is free software; you can redistribute it and/or 
modify it under the same terms as Perl itself.
.SH "APPENDIX"
.IX Header "APPENDIX"
Methods beginning with a leading underscore are considered private
and are intended for internal use by this module. They are
\&\fBnot\fR considered part of the public interface and are described here
for documentation purposes only.
.Sh "blast_local"
.IX Subsection "blast_local"
.Vb 30
\& Usage     : @files = blast_local($blast_object,  %namedParameters);
\&           : This method is exported.
\& Purpose   : Run a local Blast analysis on one or more sequences.
\&           : This method defines the API for your LocalBlast.pm module.
\& Returns   : Array containing a list of filenames of the Blast reports.
\& Argument  : $blast_object = object ref for a Bio::Tools::Blast.pm object.
\&           : %named parameters: (PARAMETER TAGS CAN BU UPPER OR LOWER CASE)
\&           : These are some basic parameters. Supply more as desired.
\&           :
\&           :   -SEQS       => ref to an array of Bio::Seq.pm objects. 
\&           :   -SEQ_FILES  => ref to an array of strings containing full-path file names.
\&           :   -PROG       => name of blast program (blastp, blastx, etc.)
\&           :   -DATABASE   => name of database (see below.)
\&           :   -EXPECT     => expect value cutoff
\&           :   -FILTER     => sequence complexity filter ('default' or 'none')
\&           :   -MATRIX     => substitution scoring matrix (blast1 only for NCBI server)
\&           :   -DESCR      => integer, number of on-line descriptions (V, 100)
\&           :   -ALIGN      => integer, number of alignments (B, 100)
\&           :   -GAP        => 'on' or 'off'
\&           :   -OUT_DIR    => output directory to store blast result files
\&           :   
\& Throws    : Exception if:
\&           :   - Cannot obtain parameters by calling _rearrange() on the
\&           :     first argument, which should be a Bio::Tools::Blast.pm object ref.
\&           :   - No sequences are provided (objects or files).
\&           :   - Sequence type is incompatible with Blast program type.
\&           :   - Database name is not one of the valid names.
\& Comments  :
\&  -------------------------------------------------------------
\&  Available programs: blastn, blastx, blastp, tblastn, tblastx
.Ve
.Vb 2
\&  -------------------------------------------------------------
\&  Available local databases are:
.Ve
.Vb 11
\&   LIST YOUR LOCAL DATABASES HERE. 
\&    These are exported by this module in the @Blast_dbp_local
\&    and @Blast_dbn_local arrays.
\&  -------------------------------------------------------------
\&  Available substitution scoring matrices: 
\&    (Here are the standard ones)
\&    BLOSUM: 100,90,85,80,75,70,65,62,60,55,50,45,40,35,30
\&    PAM:    500,490,480,470,460,450,440,430,420,410,400,390,380,370,360,350
\&            340,330,320,310,300,290,280,270,260,250,240,230,220,210,200,190,
\&            180,170,160,150,140,130,120,110,100,90,80,70,60,50,40,30,20,10
\&    OTHER: DAYHOFF, GONNET, IDENTITY, MATCH
.Ve
.Vb 4
\&    These are exported by this module in the @Blast_matrix_local
\&  -------------------------------------------------------------
\&  Available sequence complexity filters:
\&       SEG, SEG+XNU, XNU, dust, none.
.Ve
See Also : \fI_set_options()\fR, \fI_validate_options()\fR, \fI_blast_seqs()\fR, \fI_blast_files()\fR, \fBBio::Tools::Blast.pm\fR
